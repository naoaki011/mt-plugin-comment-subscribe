id: 'CommentSubscribe'
key: 'comment-subscribe'
name: 'Comment Subscribe'
description: <__trans phrase="Allows viewers to subscribe to recieve emails every time a comment is posted for a given entry.">
version: 1.5.4
schema_version: 5
author_name: "Robert Synnott, Byrne Reese, Naoaki Onozaki"
plugin_link: https://github.com/naoaki011/mt-plugin-comment-subscribe
l10n_class: CommentSubscribe::L10N

object_types:
  commentsubscriptions: 'CommentSubscribe::CommentSubscriptions'
callbacks:
  MT::Comment::post_save: $CommentSubscribe::CommentSubscribe::Plugin::process_new_comment
default_templates:
  base_path: templates
  global:email:
    commentsubscribe_notify:
      label: 'Comment Notification to Subscribers'
system_config_template: plugin_config.tmpl
settings:
  use_queue:
    default: 0
    scope: system
  from_header:
    default: ''
    scope: system
  subject_header:
    default: '(%BLOG%) %COMMENTER% posted a new comment on "%TITLE%"'
    scope: system
task_workers:
  commentsub_email_worker:
    label: "Send email notifications for new comments."
    class: 'CommentSubscribe::EmailWorker'
upgrade_functions:
  add_uniqkey:
    version_limit: 2
    priority: 1
    updater:
      type: commentsubscriptions
      label: Populating unique keys...
      code: >
        sub {
          use String::Random qw( random_string );
          $_[0]->uniqkey( random_string('000000000000',[ 'A'..'Z', 'a'..'z' ]) );
        }
applications:
  comments:
    methods:
      unsub: $CommentSubscribe::CommentSubscribe::Plugin::unsub
